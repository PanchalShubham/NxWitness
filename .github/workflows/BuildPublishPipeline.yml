# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#name
name: "Build and Publish Docker Images"

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on
on:
  push:
  pull_request:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobs
jobs:

  # Set the build matrix
  setmatrix:
    name: "Set Matrix"
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}

    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsteps
    steps:
      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: "Setup .NET SDK 6.0"
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"

      # https://github.com/marketplace/actions/checkout
      - name: "Checkout Code"
        uses: actions/checkout@v3

      # Run CreateMatrix tool
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-run
      - name: "Run CreateMatrix Tool"
        # Perform online updates only for develop builds, not ready to enable online updates for main builds yet
        run: dotnet run --project ./CreateMatrix/CreateMatrix.csproj -- matrix --version=./Make/Version.json --matrix=./Make/Matrix.json --online=${{ github.ref_name == 'develop' }}

      # Load Matrix.json from file
      - name: "Load Matrix JSON"
        id: setmatrix
        run: |
          # Load JSON from file
          JSON=$(cat ./Make/Matrix.json)
          echo "JSON:"
          echo "$JSON"
          # Convert the JSON to a single flat line to avoid having to escape the multiline output
          echo "Flat JSON:"
          FJSON=$(echo "$JSON" | jq --compact-output)
          echo "$FJSON"
          echo "matrix=${FJSON}" >> $GITHUB_OUTPUT

  # Build and publish docker images
  buildpublish:
    needs: setmatrix
    name: "Build and Publish Docker Images"
    runs-on: ubuntu-latest

    strategy:
      # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      matrix:
        images: ${{ fromJson(needs.setmatrix.outputs.matrix).images }}

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: "Checkout Code"
        uses: actions/checkout@v3

      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: "Setup QEMU"
        uses: docker/setup-qemu-action@v2

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: "Setup Docker Buildx"
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6        

      # https://github.com/marketplace/actions/docker-login
      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      # https://github.com/marketplace/actions/docker-login
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: "Build and Push Images"
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.images.name }}
          file: ${{ matrix.images.name }}/Dockerfile
          platforms: linux/amd64
          # Push only if not a pull request and branch name matches current branch
          push: "${{ (github.event_name != 'pull_request') && (github.ref_name == matrix.images.branch) }}"
          # Convert tag and args from array to multiline strings
          tags: |-
            ${{ join(matrix.images.tags, '
            ') }}
          build-args: |-
            ${{ join(matrix.images.args, '
            ') }}

  # Create a custom badge to report the build date
  # Run this job at the end of the pipeline
  datebadge:
    needs: buildpublish
    name: "Build Date Badge"
    runs-on: ubuntu-latest
    steps:
      # Get date from environment as a variable
      - id: date
        run: |
          echo "date=$(date)" >> $GITHUB_OUTPUT
      # Create badge
      # https://github.com/marketplace/actions/bring-your-own-badge
      - name: "Build Date Badge"
        uses: RubbaBoy/BYOB@v1
        with:
          NAME: lastbuild
          LABEL: "Last Build"
          ICON: "github"
          STATUS: ${{ steps.date.outputs.date }}
          COLOR: "blue"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
